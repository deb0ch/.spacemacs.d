#!/bin/bash

# This script will execute every command listed here, one at a time, stopping on
# first error and logging commands and outputs to both stdout and a file.


if [ ! $1 ]; then
    echo "Usage: "
    echo "$0 <commands-list-file> <step-number>"
    echo ""
    echo "commands-list-file: a file listing the commands to run, one command per line."
    echo "step-number: line number of the command to resume at, skipping all the ones before that."
    echo ""
    echo "$0 <commands-list-file> list"
    echo ""
    echo "list all steps with their number"
    exit 1
fi


trap "echo '\nkeyboard interrupt'; exit 1" SIGINT
trap "exit 1" SIGTERM


commands=$(< $1)

export TOP_PID=$$

if [ $2 ]; then
    skip_to=$(($2))
else
    skip_to=0
fi

step_id=1


run_cmd()
{
    if (( $step_id >= $skip_to )); then
        printf "\nExecuting %02d: %s\n" $step_id "$1"
        bash -c "$1"
        if [ $? -ne 0 ]; then
            printf "\nInstall failed on command %02d: %s\n" $step_id "$1"
            kill -s TERM $TOP_PID
        fi
    else
        printf "skipping step %02d: %s\n" $step_id "$line"
    fi
}


if [ "$2" == "list" ]; then
    while read -r line
    do
        printf "%02d: %s\n" $step_id "$line"
        step_id=$((step_id + 1))
    done <<< "$commands"

    exit 0
fi


echo -e "\nNew run:" >> $1.log

while read -r line
do
    run_cmd "$line" 2>&1 | tee -a "$1.log"
    step_id=$((step_id + 1))
done <<< "$commands"

exit 0
